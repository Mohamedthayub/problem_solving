Time complexity is  not taken 

for example :
there are two computer one is old macbook and another one is new macbook 
if you run  your a code in old macbook  that might take end to complete 3s 
the new macbook  might take end to complete 1s . this is why time complexity can't be
time taken

what is time complexity ? 

Rate at which the time taken increases with respect 
to the input size .

 1. Constant Time — O(1)
 
function printFirst(arr) {
  console.log(arr[0]);
}
It always does 1 operation → O(1)


2. Linear Time — O(n)

function printAll(arr) {
  for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
  }
}

Loop runs n times → O(n)


3. Quadratic Time — O(n²)

function printPairs(arr) {
  for (let i = 0; i < arr.length; i++) {
    for (let j = 0; j < arr.length; j++) {
      console.log(arr[i], arr[j]);
    }
  }
}
2 nested loops = n × n = O(n²)

4. Logarithmic Time — O(log n)

function binarySearch(arr, target) {
  let left = 0, right = arr.length - 1;
  while (left <= right) {
    let mid = Math.floor((left + right) / 2);
    if (arr[mid] === target) return mid;
    else if (arr[mid] < target) left = mid + 1;
    else right = mid - 1;
  }
}

Each step halves the array → O(log n)



