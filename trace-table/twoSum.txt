| Step | `i` | `arr[i]` | `compliment = target - arr[i]` | `map.has(compliment)` | Action Taken  | Map Content (`value → index`) | Return |
| ---- | --- | -------- | ------------------------------ | --------------------- | ------------- | ----------------------------- | ------ |
| 1    | 0   | 1        | 7 - 1 = 6                      | No                    | Insert `1:0`  | {1 → 0}                       | -      |
| 2    | 1   | 2        | 7 - 2 = 5                      | No                    | Insert `2:1`  | {1 → 0, 2 → 1}                | -      |
| 3    | 2   | 3        | 7 - 3 = 4                      | No                    | Insert `3:2`  | {1 → 0, 2 → 1, 3 → 2}         | -      |
| 4    | 3   | 4        | 7 - 4 = 3                      | Yes (`3` exists at 2) | Return \[2,3] | {1 → 0, 2 → 1, 3 → 2}         | \[2,3] |

function twoSum(arr,target){
    if(arr.length === 0){
        return -1;
    }
    let map = new Map();
    for(let i = 0; i<arr.length; i++){
        let compliment = target - arr[i];
        if(map.has(compliment)){
            return [map.get(compliment) ,i];
        }
        map.set(arr[i],i);
    }
    return -1; 
}
console.log(twoSum([1,2,3,4,5],7));

